<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jeves</groupId>
    <artifactId>jevesos-bootloader</artifactId>
    <version>1.0</version>

    <properties>
        <NASM>/usr/bin/nasm</NASM>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.5.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <!-- Step 1: Compile bootloader.asm into bootloader.bin -->
                    <execution>
                        <id>compile-bootloader</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/nasm</executable>
                            <arguments>
                                <argument>-f</argument>
                                <argument>bin</argument>
                                <argument>src/main/asm/bootloader.asm</argument>
                                <argument>-o</argument>
                                <argument>target/bootloader.bin</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Step 2: Compile second_stage_loader.asm into second_stage_loader.bin -->
                    <execution>
                        <id>compile-second-stage-loader</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/nasm</executable>
                            <arguments>
                                <argument>-f</argument>
                                <argument>bin</argument>
                                <argument>src/main/asm/second_stage_loader.asm</argument>
                                <argument>-o</argument>
                                <argument>target/second_stage_loader.bin</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Step 3: Create the boot directory if it doesn't exist -->
                    <execution>
                        <id>create-boot-dir</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>target/boot</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </execution>
                    <!-- Step 4: Copy binaries to target/boot directory for ISO creation -->
                    <execution>
                        <id>copy-bin-files</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/cp</executable>
                            <arguments>
                                <argument>bootloader.bin</argument>
                                <argument>second_stage_loader.bin</argument>
                                <argument>boot/</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </execution>
                    <!-- Step 5: Create the bootable ISO using bootloader.bin and second_stage_loader.bin -->
                    <execution>
                        <id>create-bootable-iso</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/mkisofs</executable>
                            <arguments>
                                <argument>-v</argument> <!-- Add verbose output -->
                                <argument>-o</argument>
                                <argument>bootloader.iso</argument>
                                <argument>-b</argument>
                                <argument>boot/bootloader.bin</argument>
                                <argument>-c</argument>
                                <argument>boot.cat</argument>
                                <argument>-no-emul-boot</argument>
                                <argument>-boot-load-size</argument>
                                <argument>4</argument> <!-- Adjust as needed -->
                                <argument>-boot-info-table</argument>
                                <argument>boot</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
